/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <150>;
    flavor = "hold-preferred";
};

&sk {
    release-after-ms = <800>;
};

#define COMBO_TIMEOUT <30>

/ {

behaviors {
    combos {
        compatible = "zmk,combos";

        // Escape, Tab, Enter, Backspace, Del
        combo_esc   { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <1 2>;   bindings = <&kp ESC>; };
        combo_tab   { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <11 12>; bindings = <&kp TAB>; };
        combo_enter { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <7 16>;  bindings = <&kp ENTER>; };
        combo_bspc  { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <7 8>;   bindings = <&kp BKSP>; };
        combo_del   { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <17 18>; bindings = <&kp DEL>; };

        // One shot CTRL, ALT, GUI
        combo_lalt  { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <1 3>;   bindings = <&sk LALT>; };
        combo_lctrl { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <11 13>; bindings = <&sk LCTRL>; };
        combo_lgui  { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <21 23>; bindings = <&sk LGUI>; };

        combo_ralt  { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <6 8>;   bindings = <&sk RALT>; };
        combo_rctrl { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <16 18>; bindings = <&sk RCTRL>; };
        combo_rgui  { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <26 28>; bindings = <&sk RGUI>; };

        // Cut, Copy, Paste
        combo_cut   { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <21 22 23>; bindings = <&kp LC(X)>; };
        combo_copy  { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <21 22>;    bindings = <&kp LC(C)>; };
        combo_paste { timeout-ms = COMBO_TIMEOUT; layers = <0 1 2>; key-positions = <22 23>;    bindings = <&kp LC(V)>; };
    };
};

keymap {
    compatible = "zmk,keymap";

    default_layer {
        bindings = <
            &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P
            &lt 2 A         &kp S           &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp APOS
            &mt LSHFT Z     &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &mt RSHFT FSLH
            &kp LCTRL       &lt 1 SPC       &lt 2 ENTER
        >;
    };

    sym_layer {
        bindings = <
            &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0
            &trans          &kp F2          &kp F3          &kp F4          &kp F5          &kp SEMI        &kp MINUS       &kp EQUAL       &kp LBKT        &kp RBKT
            &kp LSHFT       &kp F7          &kp F8          &kp F10         &kp F11         &kp F12         &kp BSLH        &kp GRAVE       &kp DOT         &kp RSHFT
            &bootloader     &trans          &reset
        >;
    };

    nav_layer {
        bindings = <
            &bt BT_CLR      &trans          &kp LGUI        &kp DEL         &kp BSPC        &trans          &kp HOME        &kp UP          &kp END         &kp BKSP
            &trans          &trans          &kp LSHFT       &kp LCTRL       &kp LALT        &trans          &kp LEFT        &kp DOWN        &kp RIGHT       &kp DEL
            &bt BT_SEL 0    &bt BT_SEL 1    &trans          &trans          &kp ENTER       &trans          &kp PG_UP       &kp PG_DN       &kp INS         &trans
            &trans          &kp TAB         &trans
        >;
    };
};

};